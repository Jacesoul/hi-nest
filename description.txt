### Nest.js 
- NestJS는 node.js 위에서 움직이는 프레임워크인데 node.js에 백엔드를 구성할수 있도록 해준다. 
- NestJS는 express.js를 이용한다.
- NestJS는 미리 세팅된 여러 기능들을 제공한다. 
- npm i -g @nestjs/cli
- nest new project-name

### Architecture of NestJS
- NestJS는 데코레이터와 함께한다. 데코레이터는 클래스에 함수기능을 추가할수 있다. 그냥 클래스 위의 함수이고 클래스를 위해 움직인다고 생각하면된다. 
- NestJS 어플리케이션은 main.ts에서 시작한다. 하나의 모듈에서 어플리케이션을 생성한다. 
- 모듈이란 어플리케이션의 일부분이다.한가지의 역할을 하는 앱이다.
- 컨트롤러가 하는일은 기본적으로 url을 가져오고 함수를 실행하는것이다. express의 라우터와 같은 존재이다.
- NestJS의 마법 덕분에 라우터를 세팅하지 않아도 된다.
- NestJS는 컨트롤러를 비지니스 로직이랑 구분짓고 싶어한다. 
- 컨트롤러는 그냥 url을 가져오는 역할을 할뿐이다. 나머지 비지니스 로직은 서비스로 간다.

### REST API
- nest g co movies => movies 컨트롤러 생성
- 무언가가 필요하면 내가 직접 요청해야한다.
- Single-responsibility principle은 하나의 moudle, 혹은 function이 하나의 기능을 꼭 책임져야 한다는것이다.
- nest g s movies => movies 서비스 생성
- DTO(Data Transfer Object)는 데이터 전송 객체이다. 
- DTO를 쓰는 한가지 이유는 프로그래머로서 코드를 더 간결하게 만들수 있게 해준다. 또한 NestJS가 들어오는 쿼리에 대해 유효성을 검사할수 있게 해준다.   
- app.useGlobalPipes(new ValidationPipe()); 유효성 검사를 위해 main.ts에 넣어준다. 
- npm i class-validator class-transformer
- DTO에 데코레이터로 @IsString(), @IsNumber()를 적용하면 유효성검사가 가능하다.
- ValidationPipe의 whitelist 옵션은 true로 설정하면 아무 decorator도 없는 어떠한 property의 object를 거른다.
- ValidationPipe의 forbidNonWhitelisted 옵션은 존재하지 않은 요소가 잘못되었다고 알려준다. 
- ValidationPipe의 transform 옵션은 유저들의 보낸것을 자동으로 우리가 원하는 실제 타입으로 변환해준다.
- npm i @nestjs/mapped-types  => 타입을 변환시키고 사용할수 있게하는 패키지다. DTO를 변환시키는것을 도와준다.
- 기본적으로 app.module은 AppService와 AppController만 가져야한다.
- nest g mo movies => movies 모듈 생성
- 앱을 만들때 모듈로 분리햐야 좋다.
- 모듈에서 provider와 controller를 import해주고 있기 때문에 private readonly moviesService로 MoviesService 타입을 가져올수가 있다. 이것을 Dependency Injection이라고 한다.
- NestJS가 MovieMoudle에 MoviesService를 import하고 Controller에 inject(주입)한다.
- 그렇기에 movies.service.ts에 @Injectable() 데코레이터가 있는것이다.
- NestJS는 express위에서 돌아가기 때문에 Controller에서 Request, Response 객체가 필요하면 사용할수도 있다.
- 그렇지만 req나 req 같은 Express 객체를 직접적으로 사용하는것이 좋은 방법은 아니다. NestJS는 express와 fastify 두개의 프레임워크에서 돌아가기 때문이다. 
- NestJS 코드만 사용한다면 Express와 Fastify 사이에 전환하고 싶을때 NestJS가 알아서 해준다.
- Fastify가 Express보다 2배 빠르다. 

### UNIT TESTING
- jest는 자바스크립트를 아주 쉽게 테스팅하는 npm 패키지이다.
- 유닛 테스팅은 모든 function을 따로 테스트하는것이다. 서비스에서 분리된 유닛을 테스트 
- end-to-end(e2e) 테스트는 모든 시스템을 테스트하는것이다.